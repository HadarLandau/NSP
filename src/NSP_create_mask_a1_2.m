function [mask_ev, mask_odd] = NSP_create_mask_a1_2 (initial_v)
  %computing the mask only for the first iteration

  %computing v
  %initial_v=cos(theta);  %v(-1)   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  v=sqrt((1+initial_v)/2);  %v(0)

  %defining alpha
   alpha=((2+sqrt(2*(v+1)))*(2-v*sqrt(2*(v+1))))...
          /(8*v*(v-1)*sqrt(2*(v+1))*(v+3+2*sqrt(2*(v+1))));

  %defining beta
  beta=((v+1)*(v-2)-2*sqrt(2*(v+1)))...
        /(2*v*sqrt(2*(v+1))*(v+3+2*sqrt(2*(v+1))));

  %computing the mask
  mask_ev=[alpha/(4*v+4);...
          (1+2*v*beta+4*v*alpha)/(4*v+4);...
          (4*v*(1-beta-2*alpha)-2*alpha+2)/(4*v+4);...
          (1+2*v*beta+4*v*alpha)/(4*v+4);...
          alpha/(4*v+4)];

  mask_odd=[alpha/2+beta/(4*v+4);...
           ((2-2*alpha)*(v+1)-beta)/((4*v+4));...
           ((2-2*alpha)*(v+1)-beta)/((4*v+4));...
           alpha/2+beta/(4*v+4)];


